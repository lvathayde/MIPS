

module regfile (
         input [4:0] ReadAddr1, ReadAddr2, WriteAddr,
         input [31:0] WriteData, // Ajustado para  5 bits
         input Clock, Reset, RegWrite,
         output [31:0] ReadData1, ReadData2 // Ajustado para  32 bits
    );

         // Declaração de um array de 32 registradores de  32 bits
         reg [31:0] registers [0:31];
 
         // Inicialização do registrador $0 com  0x00000 (5 bits)
         initial begin
              registers[0] =  32'h00000000;
         end

         // Ler dados de forma assíncrona
         assign ReadData1 = registers[ReadAddr1];
         assign ReadData2 = registers[ReadAddr2];

         // Escrever dados de forma síncrona
         always @(posedge Clock or posedge Reset) begin 
              if (Reset) begin
                    // Resetar todos os registradores para  0
                    integer i;
                    for (i =  0; i <  32; i = i +  1) begin
                         registers[i] <=  5'b00000; // Ajustado para  5 bits
                    end
              end else if (RegWrite) begin
                    // Escrever dados no registrador especificado, exceto $0
                    if (WriteAddr !=  5'b00000) begin
                         registers[WriteAddr] <= WriteData;
                    end
              end
         end
    endmodule 